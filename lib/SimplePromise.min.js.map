{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///SimplePromise.min.js","webpack:///webpack/bootstrap 0a1fa5e888f6c8b24982","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_typeof","Symbol","iterator","obj","constructor","isFunction","f","isObject","o","PENDING","FULFILLED","REJECTED","SimplePromise","resolver","resolve","isSimplePromise","then","reject","transition","reason","_this","callbacks","state","x","setTimeout","forEach","cb","onFulfilled","onRejected","e","resolvePromise","promise","v","thenCalledOrThrow","y","r","schedulePromiseResolution","onFulfill","onReject","promise2","_this2","push","promises","Array","isArray","remaining","values","sp"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,mBAAAH,GACA,gBAAAC,SACAA,QAAA,cAAAD,IAEAD,EAAA,cAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,GAEtB,YAUA,SAASe,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCARhHC,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GAGX,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMZ,OAAOC,eAAeI,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUX,EAAagB,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBN,EAAYkB,UAAWF,GAAiBC,GAAaX,EAAiBN,EAAaiB,GAAqBjB,MAE5hBmB,EAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,OAAS,eAAkBE,IEhErOE,EAAa,SAACC,GAAD,MAAoB,kBAANA,IAC3BC,EAAW,SAACC,GAAD,MAAoB,YAAb,mBAAOA,GAAP,YAAAR,EAAOQ,KAEzBC,EAAU,EACVC,EAAY,EACZC,EAAW,EAEIC,EFwEA,WEvEjB,QAAAA,GAAYC,GA0BR,QAASC,GAAQ7B,GACT2B,EAAcG,gBAAgB9B,GAC9BA,EAAM+B,KAAKF,EAASG,GAGpBC,EAAWR,EAAWzB,GAI9B,QAASgC,GAAOE,GACZD,EAAWP,EAAUQ,GApCP,GAAAC,GAAApD,IAClB,IADkBW,EAAAX,KAAA4C,IACbP,EAAWQ,GACZ,KAAM,IAAI/B,WAAJ,0BAAwC+B,EAAxC,qBAGV7C,MAAKqD,aACLrD,KAAKsD,MAAQb,CAEb,IAAMS,GAAa,SAACI,EAAOC,GACvBC,WAAW,WACHJ,EAAKE,QAAUb,IACfW,EAAKE,MAAQA,EACbF,EAAKG,EAAIA,EAETH,EAAKC,UAAUI,QAAQ,SAACC,GAChBJ,IAAUZ,EACVgB,EAAGC,YAAYJ,GAGfG,EAAGE,WAAWL,QAoBlC,KACIV,EAASC,EAASG,GAEtB,MAAOY,GACHZ,EAAOY,IF+Od,MAlKA3C,GAAa0B,IACThB,IAAK,OACLX,MAAO,SE3EP0C,EAAaC,GAQd,QAASE,GAAeC,EAASR,EAAGT,EAASG,GACrCc,IAAYR,EACZN,EAAO,GAAInC,WAAU,6CAEhB8B,EAAcG,gBAAgBQ,GAC/BA,EAAED,QAAUb,EACZc,EAAEP,KAAK,SAACgB,GACJF,EAAeC,EAASC,EAAGlB,EAASG,IACrCA,GAGHM,EAAEP,KAAKF,EAASG,GAGT,OAANM,IAAehB,EAASgB,IAAMlB,EAAWkB,KAAK,WACnD,GAAIU,IAAoB,CAExB,KACI,GAAMjB,GAAOO,EAAEP,IAEXX,GAAWW,GACXA,EAAKzC,KAAKgD,EAAG,SAACW,GACLD,IACDA,GAAoB,EACpBH,EAAeC,EAASG,EAAGpB,EAASG,KAEzC,SAACkB,GACKF,IACDA,GAAoB,EACpBhB,EAAOkB,MAKfrB,EAAQS,GAGhB,MAAOM,GACEI,IACDA,GAAoB,EACpBhB,EAAOY,QAKff,EAAQS,GAIhB,QAASa,GAA0BtB,EAASG,EAAQK,EAAOrC,GACvD,IACI,GAAMsC,GAAKD,IAAUZ,EAAa2B,EAAUpD,GAASqD,EAASrD,EAC9D6C,GAAeS,EAAUhB,EAAGT,EAASG,GAEzC,MAAOY,GACHZ,EAAOY,IA/DW,GAAAW,GAAAxE,KACpBqE,EAAYhC,EAAWsB,GAAeA,EAAc,SAACK,GAAD,MAAOA,IAC3DM,EAAWjC,EAAWuB,GAAcA,EAAa,SAACO,GACpD,KAAMA,IAGNI,QAiFJ,OAnBIA,GAAW,GAAI3B,GADf5C,KAAKsD,QAAUb,EACc,SAACK,EAASG,GACnCuB,EAAKnB,UAAUoB,MACXd,YAAa,SAAC1C,GACVmD,EAA0BtB,EAASG,EAAQP,EAAWzB,IAE1D2C,WAAY,SAACT,GACTiB,EAA0BtB,EAASG,EAAQN,EAAUQ,OAMpC,SAACL,EAASG,GACnCO,WAAW,WACPY,EAA0BtB,EAASG,EAAQuB,EAAKlB,MAAOkB,EAAKjB,UFiFvE3B,IAAK,QACLX,MAAO,SE1EN2C,GACF,MAAO5D,MAAKgD,KAAK,KAAMY,MF6EtBhC,IAAK,UACLX,MAAO,SE3EJyC,GACJ,MAAO1D,MAAKgD,KAAK,SAACgB,GAEd,MADAR,YAAWE,GACJM,GACR,SAACG,GAEA,KADAX,YAAWE,GACLS,SF+ETvC,IAAK,UACLX,MAAO,SE5EGA,GACX,MAAO,IAAI2B,GAAc,SAACE,GACtBA,EAAQ7B,QFgFXW,IAAK,SACLX,MAAO,SE7EEkC,GACV,MAAO,IAAIP,GAAc,SAACE,EAASG,GAC/BA,EAAOE,QFiFVvB,IAAK,MACLX,MAAO,SE9EDyD,GACP,MAAKC,OAAMC,QAAQF,GAIZ,GAAI9B,GAAc,SAACE,EAASG,GAC/B,GAAI4B,GAAYH,EAASnD,OACnBuD,IAEY,KAAdD,GACA/B,EAAQgC,GAGZJ,EAASjB,QAAQ,SAACM,EAASzC,GACvBsB,EAAcE,QAAQiB,GAASf,KAAK,SAAC/B,GACjC6D,EAAOxD,GAAKL,EAEQ,MAAd4D,GACF/B,EAAQgC,IAEb,SAAC3B,GAAD,MAAYF,GAAOE,SAlBnBP,EAAcK,OAAO,GAAInC,WAAU,oDFuG7Cc,IAAK,OACLX,MAAO,SEjFAyD,GACR,MAAKC,OAAMC,QAAQF,GAIZ,GAAI9B,GAAc,SAACE,EAASG,GAC/ByB,EAASjB,QAAQ,SAACM,GACdnB,EAAcE,QAAQiB,GAASf,KAAKF,EAASG,OAL1CL,EAAcK,OAAO,GAAInC,WAAU,sDF4F1C8B,IE3RSA,GAyMVG,gBAAkB,SAACgC,GAAD,MAAQA,aAAcnC,IFyFlDhD,aElSoBgD,EFmSpB/C,EAAOD,QAAUA,EAAQ","file":"SimplePromise.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SimplePromise\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimplePromise\"] = factory();\n\telse\n\t\troot[\"SimplePromise\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SimplePromise\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimplePromise\"] = factory();\n\telse\n\t\troot[\"SimplePromise\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar isFunction = function isFunction(f) {\n\t    return typeof f === 'function';\n\t};\n\tvar isObject = function isObject(o) {\n\t    return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object';\n\t};\n\t\n\tvar PENDING = 0;\n\tvar FULFILLED = 1;\n\tvar REJECTED = 2;\n\t\n\tvar SimplePromise = function () {\n\t    function SimplePromise(resolver) {\n\t        var _this = this;\n\t\n\t        _classCallCheck(this, SimplePromise);\n\t\n\t        if (!isFunction(resolver)) {\n\t            throw new TypeError('SimplePromise resolver ' + resolver + ' is not a function');\n\t        }\n\t\n\t        this.callbacks = [];\n\t        this.state = PENDING;\n\t\n\t        var transition = function transition(state, x) {\n\t            setTimeout(function () {\n\t                if (_this.state === PENDING) {\n\t                    _this.state = state;\n\t                    _this.x = x;\n\t\n\t                    _this.callbacks.forEach(function (cb) {\n\t                        if (state === FULFILLED) {\n\t                            cb.onFulfilled(x);\n\t                        } else {\n\t                            cb.onRejected(x);\n\t                        }\n\t                    });\n\t                }\n\t            });\n\t        };\n\t\n\t        function resolve(value) {\n\t            if (SimplePromise.isSimplePromise(value)) {\n\t                value.then(resolve, reject);\n\t            } else {\n\t                transition(FULFILLED, value);\n\t            }\n\t        }\n\t\n\t        function reject(reason) {\n\t            transition(REJECTED, reason);\n\t        }\n\t\n\t        try {\n\t            resolver(resolve, reject);\n\t        } catch (e) {\n\t            reject(e);\n\t        }\n\t    }\n\t\n\t    _createClass(SimplePromise, [{\n\t        key: 'then',\n\t        value: function then(onFulfilled, onRejected) {\n\t            var _this2 = this;\n\t\n\t            var onFulfill = isFunction(onFulfilled) ? onFulfilled : function (v) {\n\t                return v;\n\t            };\n\t            var onReject = isFunction(onRejected) ? onRejected : function (r) {\n\t                throw r;\n\t            };\n\t\n\t            var promise2 = void 0;\n\t\n\t            function resolvePromise(promise, x, resolve, reject) {\n\t                if (promise === x) {\n\t                    reject(new TypeError('You cannot resolve a promise with itself'));\n\t                } else if (SimplePromise.isSimplePromise(x)) {\n\t                    if (x.state === PENDING) {\n\t                        x.then(function (v) {\n\t                            resolvePromise(promise, v, resolve, reject);\n\t                        }, reject);\n\t                    } else {\n\t                        x.then(resolve, reject);\n\t                    }\n\t                } else if (x !== null && (isObject(x) || isFunction(x))) {\n\t                    (function () {\n\t                        var thenCalledOrThrow = false;\n\t\n\t                        try {\n\t                            var then = x.then;\n\t\n\t                            if (isFunction(then)) {\n\t                                then.call(x, function (y) {\n\t                                    if (!thenCalledOrThrow) {\n\t                                        thenCalledOrThrow = true;\n\t                                        resolvePromise(promise, y, resolve, reject);\n\t                                    }\n\t                                }, function (r) {\n\t                                    if (!thenCalledOrThrow) {\n\t                                        thenCalledOrThrow = true;\n\t                                        reject(r);\n\t                                    }\n\t                                });\n\t                            } else {\n\t                                resolve(x);\n\t                            }\n\t                        } catch (e) {\n\t                            if (!thenCalledOrThrow) {\n\t                                thenCalledOrThrow = true;\n\t                                reject(e);\n\t                            }\n\t                        }\n\t                    })();\n\t                } else {\n\t                    resolve(x);\n\t                }\n\t            }\n\t\n\t            function schedulePromiseResolution(resolve, reject, state, value) {\n\t                try {\n\t                    var x = state === FULFILLED ? onFulfill(value) : onReject(value);\n\t                    resolvePromise(promise2, x, resolve, reject);\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t\n\t            if (this.state === PENDING) {\n\t                promise2 = new SimplePromise(function (resolve, reject) {\n\t                    _this2.callbacks.push({\n\t                        onFulfilled: function onFulfilled(value) {\n\t                            schedulePromiseResolution(resolve, reject, FULFILLED, value);\n\t                        },\n\t                        onRejected: function onRejected(reason) {\n\t                            schedulePromiseResolution(resolve, reject, REJECTED, reason);\n\t                        }\n\t                    });\n\t                });\n\t            } else {\n\t                promise2 = new SimplePromise(function (resolve, reject) {\n\t                    setTimeout(function () {\n\t                        schedulePromiseResolution(resolve, reject, _this2.state, _this2.x);\n\t                    });\n\t                });\n\t            }\n\t\n\t            return promise2;\n\t        }\n\t    }, {\n\t        key: 'catch',\n\t        value: function _catch(onRejected) {\n\t            return this.then(null, onRejected);\n\t        }\n\t    }, {\n\t        key: 'finally',\n\t        value: function _finally(cb) {\n\t            return this.then(function (v) {\n\t                setTimeout(cb);\n\t                return v;\n\t            }, function (r) {\n\t                setTimeout(cb);\n\t                throw r;\n\t            });\n\t        }\n\t    }], [{\n\t        key: 'resolve',\n\t        value: function resolve(value) {\n\t            return new SimplePromise(function (resolve) {\n\t                resolve(value);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'reject',\n\t        value: function reject(reason) {\n\t            return new SimplePromise(function (resolve, reject) {\n\t                reject(reason);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'all',\n\t        value: function all(promises) {\n\t            if (!Array.isArray(promises)) {\n\t                return SimplePromise.reject(new TypeError('You must pass an array to SimplePromise.all.'));\n\t            }\n\t\n\t            return new SimplePromise(function (resolve, reject) {\n\t                var remaining = promises.length;\n\t                var values = [];\n\t\n\t                if (remaining === 0) {\n\t                    resolve(values);\n\t                }\n\t\n\t                promises.forEach(function (promise, i) {\n\t                    SimplePromise.resolve(promise).then(function (value) {\n\t                        values[i] = value;\n\t\n\t                        if (--remaining === 0) {\n\t                            resolve(values);\n\t                        }\n\t                    }, function (reason) {\n\t                        return reject(reason);\n\t                    });\n\t                });\n\t            });\n\t        }\n\t    }, {\n\t        key: 'race',\n\t        value: function race(promises) {\n\t            if (!Array.isArray(promises)) {\n\t                return SimplePromise.reject(new TypeError('You must pass an array to SimplePromise.race.'));\n\t            }\n\t\n\t            return new SimplePromise(function (resolve, reject) {\n\t                promises.forEach(function (promise) {\n\t                    SimplePromise.resolve(promise).then(resolve, reject);\n\t                });\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return SimplePromise;\n\t}();\n\t\n\tSimplePromise.isSimplePromise = function (sp) {\n\t    return sp instanceof SimplePromise;\n\t};\n\t\n\texports.default = SimplePromise;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** SimplePromise.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0a1fa5e888f6c8b24982\n **/","const isFunction = (f) => typeof f === 'function';\nconst isObject = (o) => typeof o === 'object';\n\nconst PENDING = 0;\nconst FULFILLED = 1;\nconst REJECTED = 2;\n\nexport default class SimplePromise {\n    constructor(resolver) {\n        if (!isFunction(resolver)) {\n            throw new TypeError(`SimplePromise resolver ${resolver} is not a function`);\n        }\n\n        this.callbacks = [];\n        this.state = PENDING;\n\n        const transition = (state, x) => {\n            setTimeout(() => {\n                if (this.state === PENDING) {\n                    this.state = state;\n                    this.x = x;\n\n                    this.callbacks.forEach((cb) => {\n                        if (state === FULFILLED) {\n                            cb.onFulfilled(x);\n                        }\n                        else {\n                            cb.onRejected(x);\n                        }\n                    });\n                }\n            });\n        };\n\n        function resolve(value) {\n            if (SimplePromise.isSimplePromise(value)) {\n                value.then(resolve, reject);\n            }\n            else {\n                transition(FULFILLED, value);\n            }\n        }\n\n        function reject(reason) {\n            transition(REJECTED, reason);\n        }\n\n        try {\n            resolver(resolve, reject);\n        }\n        catch (e) {\n            reject(e);\n        }\n    }\n\n    then(onFulfilled, onRejected) {\n        const onFulfill = isFunction(onFulfilled) ? onFulfilled : (v) => v;\n        const onReject = isFunction(onRejected) ? onRejected : (r) => {\n            throw r;\n        };\n\n        let promise2;\n\n        function resolvePromise(promise, x, resolve, reject) {\n            if (promise === x) {\n                reject(new TypeError('You cannot resolve a promise with itself'));\n            }\n            else if (SimplePromise.isSimplePromise(x)) {\n                if (x.state === PENDING) {\n                    x.then((v) => {\n                        resolvePromise(promise, v, resolve, reject);\n                    }, reject);\n                }\n                else {\n                    x.then(resolve, reject);\n                }\n            }\n            else if (x !== null && (isObject(x) || isFunction(x))) {\n                let thenCalledOrThrow = false;\n\n                try {\n                    const then = x.then;\n\n                    if (isFunction(then)) {\n                        then.call(x, (y) => {\n                            if (!thenCalledOrThrow) {\n                                thenCalledOrThrow = true;\n                                resolvePromise(promise, y, resolve, reject);\n                            }\n                        }, (r) => {\n                            if (!thenCalledOrThrow) {\n                                thenCalledOrThrow = true;\n                                reject(r);\n                            }\n                        });\n                    }\n                    else {\n                        resolve(x);\n                    }\n                }\n                catch (e) {\n                    if (!thenCalledOrThrow) {\n                        thenCalledOrThrow = true;\n                        reject(e);\n                    }\n                }\n            }\n            else {\n                resolve(x);\n            }\n        }\n\n        function schedulePromiseResolution(resolve, reject, state, value) {\n            try {\n                const x = (state === FULFILLED) ? onFulfill(value) : onReject(value);\n                resolvePromise(promise2, x, resolve, reject);\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n\n        if (this.state === PENDING) {\n            promise2 = new SimplePromise((resolve, reject) => {\n                this.callbacks.push({\n                    onFulfilled: (value) => {\n                        schedulePromiseResolution(resolve, reject, FULFILLED, value);\n                    },\n                    onRejected: (reason) => {\n                        schedulePromiseResolution(resolve, reject, REJECTED, reason);\n                    },\n                });\n            });\n        }\n        else {\n            promise2 = new SimplePromise((resolve, reject) => {\n                setTimeout(() => {\n                    schedulePromiseResolution(resolve, reject, this.state, this.x);\n                });\n            });\n        }\n\n        return promise2;\n    }\n\n    catch(onRejected) {\n        return this.then(null, onRejected);\n    }\n\n    finally(cb) {\n        return this.then((v) => {\n            setTimeout(cb);\n            return v;\n        }, (r) => {\n            setTimeout(cb);\n            throw r;\n        });\n    }\n\n    static resolve(value) {\n        return new SimplePromise((resolve) => {\n            resolve(value);\n        });\n    }\n\n    static reject(reason) {\n        return new SimplePromise((resolve, reject) => {\n            reject(reason);\n        });\n    }\n\n    static all(promises) {\n        if (!Array.isArray(promises)) {\n            return SimplePromise.reject(new TypeError('You must pass an array to SimplePromise.all.'));\n        }\n\n        return new SimplePromise((resolve, reject) => {\n            let remaining = promises.length;\n            const values = [];\n\n            if (remaining === 0) {\n                resolve(values);\n            }\n\n            promises.forEach((promise, i) => {\n                SimplePromise.resolve(promise).then((value) => {\n                    values[i] = value;\n\n                    if (--remaining === 0) {\n                        resolve(values);\n                    }\n                }, (reason) => reject(reason));\n            });\n        });\n    }\n\n    static race(promises) {\n        if (!Array.isArray(promises)) {\n            return SimplePromise.reject(new TypeError('You must pass an array to SimplePromise.race.'));\n        }\n\n        return new SimplePromise((resolve, reject) => {\n            promises.forEach((promise) => {\n                SimplePromise.resolve(promise).then(resolve, reject);\n            });\n        });\n    }\n\n    static isSimplePromise = (sp) => sp instanceof SimplePromise;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/"],"sourceRoot":""}