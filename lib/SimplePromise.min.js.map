{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///SimplePromise.min.js","webpack:///webpack/bootstrap 95ab46fcbe3699419e88","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","SimplePromise","resolver","resolve","value","then","reject","transition","FULFILLED","reason","REJECTED","_this","isFunction","TypeError","callbacks","state","PENDING","e","x","setTimeout","forEach","cb","onFulfilled","onRejected","resolvePromise","promise","v","isObject","thenCalledOrThrow","y","r","Object","defineProperty","_typeof","Symbol","iterator","obj","constructor","f","o","prototype","schedulePromiseResolution","onFulfill","onReject","promise2","_this2","push","all","promises","Array","isArray","remaining","length","values","i","race"],"mappings":"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","file":"SimplePromise.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SimplePromise\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimplePromise\"] = factory();\n\telse\n\t\troot[\"SimplePromise\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SimplePromise\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimplePromise\"] = factory();\n\telse\n\t\troot[\"SimplePromise\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\texports.default = SimplePromise;\n\tvar isFunction = function isFunction(f) {\n\t    return typeof f === 'function';\n\t};\n\tvar isObject = function isObject(o) {\n\t    return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object';\n\t};\n\t\n\tvar PENDING = 0;\n\tvar FULFILLED = 1;\n\tvar REJECTED = 2;\n\t\n\tfunction SimplePromise(resolver) {\n\t    var _this = this;\n\t\n\t    if (!isFunction(resolver)) {\n\t        throw new TypeError('SimplePromise resolver ' + resolver + ' is not a function');\n\t    }\n\t\n\t    this.callbacks = [];\n\t    this.state = PENDING;\n\t\n\t    // TODO - bug when rejecting with new TypeError, the original message is hidden\n\t    try {\n\t        resolver(resolve, reject);\n\t    } catch (e) {\n\t        reject(e);\n\t    }\n\t\n\t    var transition = function transition(state, x) {\n\t        if (_this.state === PENDING) {\n\t            setTimeout(function () {\n\t                _this.state = state;\n\t                _this.x = x;\n\t\n\t                _this.callbacks.forEach(function (cb) {\n\t                    if (state === FULFILLED) {\n\t                        cb.onFulfilled(x);\n\t                    } else {\n\t                        cb.onRejected(x);\n\t                    }\n\t                });\n\t            });\n\t        }\n\t    };\n\t\n\t    function resolve(value) {\n\t        if (value instanceof SimplePromise) {\n\t            value.then(resolve, reject);\n\t        } else {\n\t            transition(FULFILLED, value);\n\t        }\n\t    }\n\t\n\t    function reject(reason) {\n\t        transition(REJECTED, reason);\n\t    }\n\t}\n\t\n\tfunction resolvePromise(promise, x, resolve, reject) {\n\t    // TODO - bug with rejecting with new TypeError\n\t    if (promise === x) {\n\t        reject(new TypeError('You cannot resolve a promise with itself'));\n\t    } else if (x instanceof SimplePromise) {\n\t        if (x.state === PENDING) {\n\t            x.then(function (v) {\n\t                resolvePromise(promise, v, resolve, reject);\n\t            }, reject);\n\t        } else {\n\t            x.then(resolve, reject);\n\t        }\n\t    } else if (x !== null && (isObject(x) || isFunction(x))) {\n\t        (function () {\n\t            var thenCalledOrThrow = false;\n\t\n\t            try {\n\t                var then = x.then;\n\t\n\t                if (isFunction(then)) {\n\t                    then.call(x, function (y) {\n\t                        if (!thenCalledOrThrow) {\n\t                            thenCalledOrThrow = true;\n\t                            resolvePromise(promise, y, resolve, reject);\n\t                        }\n\t                    }, function (r) {\n\t                        if (!thenCalledOrThrow) {\n\t                            thenCalledOrThrow = true;\n\t                            reject(r);\n\t                        }\n\t                    });\n\t                } else {\n\t                    resolve(x);\n\t                }\n\t            } catch (e) {\n\t                if (!thenCalledOrThrow) {\n\t                    thenCalledOrThrow = true;\n\t                    reject(e);\n\t                }\n\t            }\n\t        })();\n\t    } else {\n\t        resolve(x);\n\t    }\n\t}\n\t\n\tSimplePromise.prototype.then = function (onFulfilled, onRejected) {\n\t    var _this2 = this;\n\t\n\t    var onFulfill = isFunction(onFulfilled) ? onFulfilled : function (v) {\n\t        return v;\n\t    };\n\t    var onReject = isFunction(onRejected) ? onRejected : function (r) {\n\t        throw r;\n\t    };\n\t\n\t    var promise2 = void 0;\n\t\n\t    function schedulePromiseResolution(resolve, reject, state, value) {\n\t        try {\n\t            var x = state === FULFILLED ? onFulfill(value) : onReject(value);\n\t            resolvePromise(promise2, x, resolve, reject);\n\t        } catch (e) {\n\t            reject(e);\n\t        }\n\t    }\n\t\n\t    if (this.state === PENDING) {\n\t        promise2 = new SimplePromise(function (resolve, reject) {\n\t            _this2.callbacks.push({\n\t                onFulfilled: function onFulfilled(value) {\n\t                    schedulePromiseResolution(resolve, reject, FULFILLED, value);\n\t                },\n\t                onRejected: function onRejected(reason) {\n\t                    schedulePromiseResolution(resolve, reject, REJECTED, reason);\n\t                }\n\t            });\n\t        });\n\t    } else {\n\t        promise2 = new SimplePromise(function (resolve, reject) {\n\t            setTimeout(function () {\n\t                schedulePromiseResolution(resolve, reject, _this2.state, _this2.x);\n\t            });\n\t        });\n\t    }\n\t\n\t    return promise2;\n\t};\n\t\n\tSimplePromise.prototype.catch = function (onRejected) {\n\t    return this.then(null, onRejected);\n\t};\n\t\n\tSimplePromise.prototype.finally = function (cb) {\n\t    return this.then(function (v) {\n\t        setTimeout(cb);\n\t        return v;\n\t    }, function (r) {\n\t        setTimeout(cb);\n\t        throw r;\n\t    });\n\t};\n\t\n\tSimplePromise.resolve = function (value) {\n\t    return new SimplePromise(function (resolve) {\n\t        resolve(value);\n\t    });\n\t};\n\t\n\tSimplePromise.reject = function (reason) {\n\t    return new SimplePromise(function (resolve, reject) {\n\t        reject(reason);\n\t    });\n\t};\n\t\n\tSimplePromise.all = function (promises) {\n\t    // TODO - bug with rejecting with new TypeError\n\t    if (!Array.isArray(promises)) {\n\t        return SimplePromise.reject(new TypeError('You must pass an array to SimplePromise.all.'));\n\t    }\n\t\n\t    return new SimplePromise(function (resolve, reject) {\n\t        var remaining = promises.length;\n\t        var values = [];\n\t\n\t        if (remaining === 0) {\n\t            resolve(values);\n\t        }\n\t\n\t        promises.forEach(function (promise, i) {\n\t            SimplePromise.resolve(promise).then(function (value) {\n\t                values[i] = value;\n\t\n\t                if (--remaining === 0) {\n\t                    resolve(values);\n\t                }\n\t            }, function (reason) {\n\t                return reject(reason);\n\t            });\n\t        });\n\t    });\n\t};\n\t\n\t/**\n\t * TODO - bug, then is called for every resolved promise\n\t */\n\tSimplePromise.race = function (promises) {\n\t    // TODO - bug with rejecting with new TypeError\n\t    if (!Array.isArray(promises)) {\n\t        return SimplePromise.reject(new TypeError('You must pass an array to SimplePromise.race.'));\n\t    }\n\t\n\t    return new SimplePromise(function (resolve, reject) {\n\t        promises.forEach(function (promise) {\n\t            SimplePromise.resolve(promise).then(resolve, reject);\n\t        });\n\t    });\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** SimplePromise.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 95ab46fcbe3699419e88\n **/","const isFunction = (f) => typeof f === 'function';\nconst isObject = (o) => typeof o === 'object';\n\nconst PENDING = 0;\nconst FULFILLED = 1;\nconst REJECTED = 2;\n\nexport default function SimplePromise(resolver) {\n    if (!isFunction(resolver)) {\n        throw new TypeError(`SimplePromise resolver ${resolver} is not a function`);\n    }\n\n    this.callbacks = [];\n    this.state = PENDING;\n\n    // TODO - bug when rejecting with new TypeError, the original message is hidden\n    try {\n        resolver(resolve, reject);\n    }\n    catch (e) {\n        reject(e);\n    }\n\n    const transition = (state, x) => {\n        if (this.state === PENDING) {\n            setTimeout(() => {\n                this.state = state;\n                this.x = x;\n\n                this.callbacks.forEach((cb) => {\n                    if (state === FULFILLED) {\n                        cb.onFulfilled(x);\n                    }\n                    else {\n                        cb.onRejected(x);\n                    }\n                });\n            });\n        }\n    };\n\n    function resolve(value) {\n        if (value instanceof SimplePromise) {\n            value.then(resolve, reject);\n        }\n        else {\n            transition(FULFILLED, value);\n        }\n    }\n\n    function reject(reason) {\n        transition(REJECTED, reason);\n    }\n}\n\nfunction resolvePromise(promise, x, resolve, reject) {\n    // TODO - bug with rejecting with new TypeError\n    if (promise === x) {\n        reject(new TypeError('You cannot resolve a promise with itself'));\n    }\n    else if (x instanceof SimplePromise) {\n        if (x.state === PENDING) {\n            x.then((v) => {\n                resolvePromise(promise, v, resolve, reject);\n            }, reject);\n        }\n        else {\n            x.then(resolve, reject);\n        }\n    }\n    else if (x !== null && (isObject(x) || isFunction(x))) {\n        let thenCalledOrThrow = false;\n\n        try {\n            const then = x.then;\n\n            if (isFunction(then)) {\n                then.call(x, (y) => {\n                    if (!thenCalledOrThrow) {\n                        thenCalledOrThrow = true;\n                        resolvePromise(promise, y, resolve, reject);\n                    }\n                }, (r) => {\n                    if (!thenCalledOrThrow) {\n                        thenCalledOrThrow = true;\n                        reject(r);\n                    }\n                });\n            }\n            else {\n                resolve(x);\n            }\n        }\n        catch (e) {\n            if (!thenCalledOrThrow) {\n                thenCalledOrThrow = true;\n                reject(e);\n            }\n        }\n    }\n    else {\n        resolve(x);\n    }\n}\n\nSimplePromise.prototype.then = function (onFulfilled, onRejected) {\n    const onFulfill = isFunction(onFulfilled) ? onFulfilled : (v) => v;\n    const onReject = isFunction(onRejected) ? onRejected : (r) => {\n        throw r;\n    };\n\n    let promise2;\n\n    function schedulePromiseResolution(resolve, reject, state, value) {\n        try {\n            const x = (state === FULFILLED) ? onFulfill(value) : onReject(value);\n            resolvePromise(promise2, x, resolve, reject);\n        }\n        catch (e) {\n            reject(e);\n        }\n    }\n\n    if (this.state === PENDING) {\n        promise2 = new SimplePromise((resolve, reject) => {\n            this.callbacks.push({\n                onFulfilled: (value) => {\n                    schedulePromiseResolution(resolve, reject, FULFILLED, value);\n                },\n                onRejected: (reason) => {\n                    schedulePromiseResolution(resolve, reject, REJECTED, reason);\n                },\n            });\n        });\n    }\n    else {\n        promise2 = new SimplePromise((resolve, reject) => {\n            setTimeout(() => {\n                schedulePromiseResolution(resolve, reject, this.state, this.x);\n            });\n        });\n    }\n\n    return promise2;\n};\n\nSimplePromise.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n};\n\nSimplePromise.prototype.finally = function (cb) {\n    return this.then((v) => {\n        setTimeout(cb);\n        return v;\n    }, (r) => {\n        setTimeout(cb);\n        throw r;\n    });\n};\n\nSimplePromise.resolve = function (value) {\n    return new SimplePromise((resolve) => {\n        resolve(value);\n    });\n};\n\nSimplePromise.reject = function (reason) {\n    return new SimplePromise((resolve, reject) => {\n        reject(reason);\n    });\n};\n\nSimplePromise.all = function (promises) {\n    // TODO - bug with rejecting with new TypeError\n    if (!Array.isArray(promises)) {\n        return SimplePromise.reject(new TypeError('You must pass an array to SimplePromise.all.'));\n    }\n\n    return new SimplePromise((resolve, reject) => {\n        let remaining = promises.length;\n        const values = [];\n\n        if (remaining === 0) {\n            resolve(values);\n        }\n\n        promises.forEach((promise, i) => {\n            SimplePromise.resolve(promise).then((value) => {\n                values[i] = value;\n\n                if (--remaining === 0) {\n                    resolve(values);\n                }\n            }, (reason) => reject(reason));\n        });\n    });\n};\n\n/**\n * TODO - bug, then is called for every resolved promise\n */\nSimplePromise.race = function (promises) {\n    // TODO - bug with rejecting with new TypeError\n    if (!Array.isArray(promises)) {\n        return SimplePromise.reject(new TypeError('You must pass an array to SimplePromise.race.'));\n    }\n\n    return new SimplePromise((resolve, reject) => {\n        promises.forEach((promise) => {\n            SimplePromise.resolve(promise).then(resolve, reject);\n        });\n    });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/"],"sourceRoot":""}